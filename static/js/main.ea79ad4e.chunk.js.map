{"version":3,"sources":["components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["Section","title","children","className","Feedback","onClickNeutral","id","onClick","Statistics","good_value","neutral_value","bad_value","total","positivePercentage","isNaN","Notification","props","App","state","handleClickNeutral","evt","key","target","setState","prevState","countTotalFeedback","Math","round","this","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUAYeA,MATf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,0BAASD,MAAOA,EAAOE,UAAU,UAAjC,UACE,6BAAKF,IACJC,M,MCkCQE,MAtCf,YAAuC,IAAnBC,EAAkB,EAAlBA,eAClB,OACE,mCACE,qBAAKF,UAAU,eAAf,SACE,qBAAIA,UAAU,eAAd,UACE,6BACE,wBACEA,UAAU,mBACVG,GAAG,aACHC,QAASF,EAHX,oBAQF,6BACE,wBACEF,UAAU,sBACVG,GAAG,gBACHC,QAASF,EAHX,uBAQF,6BACE,wBACEF,UAAU,kBACVG,GAAG,YACHC,QAASF,EAHX,2B,MCFGG,MAtBf,YAMI,IALFC,EAKC,EALDA,WACAC,EAIC,EAJDA,cACAC,EAGC,EAHDA,UACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,qBAAKV,UAAU,mBAAf,SACE,qBAAIA,UAAU,oBAAd,UACE,6CAAcM,KACd,gDAAiBC,KACjB,4CAAaC,KACb,8CAAeC,MACbE,MAAMD,IACN,yDAA0BA,EAA1B,aCZKE,MAJf,SAAsBC,GACpB,OAAO,mDCGHC,E,4MACJC,MAAQ,CACNT,WAAY,EACZC,cAAe,EACfC,UAAW,G,EAGbQ,mBAAqB,SAACC,GACpB,IAAIC,EAAMD,EAAIE,OAAOhB,GAErB,EAAKiB,UAAS,SAACC,GACb,OAAO,eAAGH,EAAMG,EAAUH,GAAO,O,EAIrCI,mBAAqB,WACnB,OACE,EAAKP,MAAMT,WAAa,EAAKS,MAAMR,cAAgB,EAAKQ,MAAMP,W,qEAIlE,WACE,OAAOe,KAAKC,MACTC,KAAKV,MAAMT,WAAamB,KAAKH,qBAAwB,O,oBAI1D,WACE,OACE,qCACE,cAAC,EAAD,CACExB,MAAM,wBACNC,SACE,cAAC,EAAD,CAAiBG,eAAgBuB,KAAKT,uBAIf,IAA1BS,KAAKV,MAAMT,YACiB,IAA7BmB,KAAKV,MAAMR,eACc,IAAzBkB,KAAKV,MAAMP,UACT,cAAC,EAAD,CAASV,MAAM,aAAaC,SAAU,cAAC,EAAD,MAEtC,cAAC,EAAD,CACED,MAAM,aACNC,SACE,cAAC,EAAD,CACEO,WAAYmB,KAAKV,MAAMT,WACvBC,cAAekB,KAAKV,MAAMR,cAC1BC,UAAWiB,KAAKV,MAAMP,UACtBC,MAAOgB,KAAKH,qBACZZ,mBAAoBe,KAAKC,6C,GAlDvBC,aA4DHb,IC7Dfc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ea79ad4e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport styles from \"./Section.css\";\n\nfunction Section({ title, children }) {\n  return (\n    <section title={title} className=\"section\">\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nexport default Section;\n","import React from \"react\";\nimport styles from \"./FeedbackOptions.css\";\n\nfunction Feedback({ onClickNeutral }) {\n  return (\n    <>\n      <div className=\"button__area\">\n        <ul className=\"button__list\">\n          <li>\n            <button\n              className=\"button__btn good\"\n              id=\"good_value\"\n              onClick={onClickNeutral}\n            >\n              Good\n            </button>\n          </li>\n          <li>\n            <button\n              className=\"button__btn neutral\"\n              id=\"neutral_value\"\n              onClick={onClickNeutral}\n            >\n              Neutral\n            </button>\n          </li>\n          <li>\n            <button\n              className=\"button__btn bad\"\n              id=\"bad_value\"\n              onClick={onClickNeutral}\n            >\n              Bad\n            </button>\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n}\n\nexport default Feedback;\n","import React, { Component } from \"react\";\nimport styles from \"./Statistics.css\";\n\nfunction Statistics({\n  good_value,\n  neutral_value,\n  bad_value,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <div className=\"statistics__area\">\n      <ul className=\"statistics__list \">\n        <li>{`Good: ${good_value}`}</li>\n        <li>{`Neutral: ${neutral_value}`}</li>\n        <li>{`Bad: ${bad_value}`}</li>\n        <li>{`Total: ${total}`}</li>\n        {!isNaN(positivePercentage) && (\n          <li>{`Positive feedback:${positivePercentage}%`}</li>\n        )}\n      </ul>\n    </div>\n  );\n}\n\nexport default Statistics;\n","import React, { Component } from \"react\";\n\nfunction Notification(props) {\n  return <p>No feedback given</p>;\n}\n\nexport default Notification;\n","import React, { Component } from \"react\";\nimport Section from \"./components/Section/Section\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Notification from \"./components/Notification/Notification\";\n\nclass App extends Component {\n  state = {\n    good_value: 0,\n    neutral_value: 0,\n    bad_value: 0,\n  };\n\n  handleClickNeutral = (evt) => {\n    let key = evt.target.id;\n\n    this.setState((prevState) => {\n      return { [key]: prevState[key] + 1 };\n    });\n  };\n\n  countTotalFeedback = () => {\n    return (\n      this.state.good_value + this.state.neutral_value + this.state.bad_value\n    );\n  };\n\n  countPositiveFeedbackPercentage() {\n    return Math.round(\n      (this.state.good_value / this.countTotalFeedback()) * 100\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <Section\n          title=\"Please leave feedback\"\n          children={\n            <FeedbackOptions onClickNeutral={this.handleClickNeutral} />\n          }\n        />\n\n        {this.state.good_value === 0 &&\n        this.state.neutral_value === 0 &&\n        this.state.bad_value === 0 ? (\n          <Section title=\"Statistics\" children={<Notification />} />\n        ) : (\n          <Section\n            title=\"Statistics\"\n            children={\n              <Statistics\n                good_value={this.state.good_value}\n                neutral_value={this.state.neutral_value}\n                bad_value={this.state.bad_value}\n                total={this.countTotalFeedback()}\n                positivePercentage={this.countPositiveFeedbackPercentage()}\n              />\n            }\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}