{"version":3,"sources":["components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["Section","title","children","className","Feedback","onClickGood","onClickNeutral","onClickBad","onClick","Statistics","good_value","neutral_value","bad_value","total","positivePercentage","isNaN","Notification","props","App","state","handleClickGood","setState","prevState","handleClickNeutral","handleClickBad","countTotalFeedback","Math","round","this","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAYeA,MATf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,0BAASD,MAAOA,EAAOE,UAAU,UAAjC,UACE,6BAAKF,IACJC,M,MCsBQE,MA1Bf,YAAgE,IAA5CC,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,eAAgBC,EAAc,EAAdA,WAC/C,OACE,mCACE,qBAAKJ,UAAU,eAAf,SACE,qBAAIA,UAAU,eAAd,UACE,6BACE,wBAAQA,UAAU,mBAAmBK,QAASH,EAA9C,oBAIF,6BACE,wBAAQF,UAAU,sBAAsBK,QAASF,EAAjD,uBAIF,6BACE,wBAAQH,UAAU,kBAAkBK,QAASD,EAA7C,2B,MCMGE,MAtBf,YAMI,IALFC,EAKC,EALDA,WACAC,EAIC,EAJDA,cACAC,EAGC,EAHDA,UACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,qBAAKX,UAAU,mBAAf,SACE,qBAAIA,UAAU,oBAAd,UACE,6CAAcO,KACd,gDAAiBC,KACjB,4CAAaC,KACb,8CAAeC,MACbE,MAAMD,IACN,yDAA0BA,EAA1B,aCZKE,MAJf,SAAsBC,GACpB,OAAO,mDCGHC,E,4MACJC,MAAQ,CACNT,WAAY,EACZC,cAAe,EACfC,UAAW,G,EAGbQ,gBAAkB,WAChB,EAAKC,UAAS,SAACC,GACb,MAAO,CAAEZ,WAAYY,EAAUZ,WAAa,O,EAIhDa,mBAAqB,WACnB,EAAKF,UAAS,SAACC,GACb,MAAO,CAAEX,cAAeW,EAAUX,cAAgB,O,EAItDa,eAAiB,WACf,EAAKH,UAAS,SAACC,GACb,MAAO,CAAEV,UAAWU,EAAUV,UAAY,O,EAI9Ca,mBAAqB,WACnB,OACE,EAAKN,MAAMT,WAAa,EAAKS,MAAMR,cAAgB,EAAKQ,MAAMP,W,qEAIlE,WACE,OAAOc,KAAKC,MACTC,KAAKT,MAAMT,WAAakB,KAAKH,qBAAwB,O,oBAI1D,WACE,OACE,qCACE,cAAC,EAAD,CACExB,MAAM,wBACNC,SACE,cAAC,EAAD,CACEG,YAAauB,KAAKR,gBAClBd,eAAgBsB,KAAKL,mBACrBhB,WAAYqB,KAAKJ,mBAKI,IAA1BI,KAAKT,MAAMT,YACiB,IAA7BkB,KAAKT,MAAMR,eACc,IAAzBiB,KAAKT,MAAMP,UACT,cAAC,EAAD,CAASX,MAAM,aAAaC,SAAU,cAAC,EAAD,MAEtC,cAAC,EAAD,CACED,MAAM,aACNC,SACE,cAAC,EAAD,CACEQ,WAAYkB,KAAKT,MAAMT,WACvBC,cAAeiB,KAAKT,MAAMR,cAC1BC,UAAWgB,KAAKT,MAAMP,UACtBC,MAAOe,KAAKH,qBACZX,mBAAoBc,KAAKC,6C,GAhEvBC,aA0EHZ,IC3Efa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2cea9414.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport styles from \"./Section.css\";\n\nfunction Section({ title, children }) {\n  return (\n    <section title={title} className=\"section\">\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nexport default Section;\n","import { Component } from \"react\";\nimport styles from \"./FeedbackOptions.css\";\n\nfunction Feedback({ onClickGood, onClickNeutral, onClickBad }) {\n  return (\n    <>\n      <div className=\"button__area\">\n        <ul className=\"button__list\">\n          <li>\n            <button className=\"button__btn good\" onClick={onClickGood}>\n              Good\n            </button>\n          </li>\n          <li>\n            <button className=\"button__btn neutral\" onClick={onClickNeutral}>\n              Neutral\n            </button>\n          </li>\n          <li>\n            <button className=\"button__btn bad\" onClick={onClickBad}>\n              Bad\n            </button>\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n}\n\nexport default Feedback;\n","import React, { Component } from \"react\";\nimport styles from \"./Statistics.css\";\n\nfunction Statistics({\n  good_value,\n  neutral_value,\n  bad_value,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <div className=\"statistics__area\">\n      <ul className=\"statistics__list \">\n        <li>{`Good: ${good_value}`}</li>\n        <li>{`Neutral: ${neutral_value}`}</li>\n        <li>{`Bad: ${bad_value}`}</li>\n        <li>{`Total: ${total}`}</li>\n        {!isNaN(positivePercentage) && (\n          <li>{`Positive feedback:${positivePercentage}%`}</li>\n        )}\n      </ul>\n    </div>\n  );\n}\n\nexport default Statistics;\n","import React, { Component } from \"react\";\n\nfunction Notification(props) {\n  return <p>No feedback given</p>;\n}\n\nexport default Notification;\n","import React, { Component } from \"react\";\nimport Section from \"./components/Section/Section\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Notification from \"./components/Notification/Notification\";\n\nclass App extends Component {\n  state = {\n    good_value: 0,\n    neutral_value: 0,\n    bad_value: 0,\n  };\n\n  handleClickGood = () => {\n    this.setState((prevState) => {\n      return { good_value: prevState.good_value + 1 };\n    });\n  };\n\n  handleClickNeutral = () => {\n    this.setState((prevState) => {\n      return { neutral_value: prevState.neutral_value + 1 };\n    });\n  };\n\n  handleClickBad = () => {\n    this.setState((prevState) => {\n      return { bad_value: prevState.bad_value + 1 };\n    });\n  };\n\n  countTotalFeedback = () => {\n    return (\n      this.state.good_value + this.state.neutral_value + this.state.bad_value\n    );\n  };\n\n  countPositiveFeedbackPercentage() {\n    return Math.round(\n      (this.state.good_value / this.countTotalFeedback()) * 100\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <Section\n          title=\"Please leave feedback\"\n          children={\n            <FeedbackOptions\n              onClickGood={this.handleClickGood}\n              onClickNeutral={this.handleClickNeutral}\n              onClickBad={this.handleClickBad}\n            />\n          }\n        />\n\n        {this.state.good_value === 0 &&\n        this.state.neutral_value === 0 &&\n        this.state.bad_value === 0 ? (\n          <Section title=\"Statistics\" children={<Notification />} />\n        ) : (\n          <Section\n            title=\"Statistics\"\n            children={\n              <Statistics\n                good_value={this.state.good_value}\n                neutral_value={this.state.neutral_value}\n                bad_value={this.state.bad_value}\n                total={this.countTotalFeedback()}\n                positivePercentage={this.countPositiveFeedbackPercentage()}\n              />\n            }\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}